package com.techsolutions.backend.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import javax.sql.DataSource;
import java.sql.Connection;

/**
 * Componente para probar la conexi√≥n a la base de datos al iniciar la aplicaci√≥n
 * 
 * Ubicaci√≥n: backend/src/main/java/com/techsolutions/backend/config/DatabaseConnectionTest.java
 */
@Component
public class DatabaseConnectionTest implements CommandLineRunner {
    
    @Autowired
    private DataSource dataSource;
    
    @Override
    public void run(String... args) {
        System.out.println("\n" + "=".repeat(80));
        System.out.println("üîç INICIANDO PRUEBA DE CONEXI√ìN A LA BASE DE DATOS");
        System.out.println("=".repeat(80));
        
        try (Connection connection = dataSource.getConnection()) {
            
            System.out.println("\n‚úÖ ¬°CONEXI√ìN EXITOSA!");
            System.out.println("üìä Informaci√≥n de la base de datos:");
            System.out.println("   - URL: " + connection.getMetaData().getURL());
            System.out.println("   - Usuario: " + connection.getMetaData().getUserName());
            System.out.println("   - Driver: " + connection.getMetaData().getDriverName());
            System.out.println("   - Versi√≥n del driver: " + connection.getMetaData().getDriverVersion());
            System.out.println("   - Producto: " + connection.getMetaData().getDatabaseProductName());
            System.out.println("   - Versi√≥n del producto: " + connection.getMetaData().getDatabaseProductVersion());
            System.out.println("   - Conexi√≥n v√°lida: " + connection.isValid(5));
            
            System.out.println("\n" + "=".repeat(80));
            System.out.println("‚úÖ La aplicaci√≥n est√° lista para usar la base de datos");
            System.out.println("=".repeat(80) + "\n");
            
        } catch (Exception e) {
            System.err.println("\n" + "=".repeat(80));
            System.err.println("‚ùå ERROR AL CONECTAR CON LA BASE DE DATOS");
            System.err.println("=".repeat(80));
            System.err.println("\nüîß Detalles del error:");
            System.err.println("   Tipo: " + e.getClass().getSimpleName());
            System.err.println("   Mensaje: " + e.getMessage());
            
            System.err.println("\nüí° Posibles soluciones:");
            System.err.println("   1. Verifica que MySQL est√© ejecut√°ndose");
            System.err.println("   2. Confirma que la base de datos 'techsolutions' existe");
            System.err.println("   3. Verifica el usuario y contrase√±a en application.properties");
            System.err.println("   4. Aseg√∫rate de que el puerto 3306 est√© disponible");
            System.err.println("   5. Revisa que el conector MySQL est√© en el classpath");
            
            System.err.println("\nüìù Configuraci√≥n actual (application.properties):");
            System.err.println("   spring.datasource.url=jdbc:mysql://localhost:3306/techsolutions");
            System.err.println("   spring.datasource.username=root");
            System.err.println("   spring.datasource.password=(vac√≠a)");
            
            System.err.println("\n" + "=".repeat(80));
            System.err.println("‚ö†Ô∏è  LA APLICACI√ìN CONTINUAR√Å, PERO LA BD NO EST√Å DISPONIBLE");
            System.err.println("=".repeat(80) + "\n");
            
            // Imprimir stack trace completo para debug
            e.printStackTrace();
        }
    }
}